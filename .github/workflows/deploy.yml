name: Deploy to AWS Lambda

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  AWS_REGION: {{ env.AWS_REGION }}
  AWS_DEFAULT_REGION: {{ env.AWS_REGION }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run basic validation
        run: |
          python -c "import app.main; print('Import validation successful')"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Serverless Framework
      run: npm install -g serverless@3
      
    - name: Install serverless plugins
      run: |
        npm install serverless-dotenv-plugin

    - name: Create environment file
      run: |
        # Create .env file with secrets
        echo "${{ secrets.LAMBDA_ENV_VARS }}" > .env
      
    - name: Deploy to AWS Lambda with ECR build
      run: |
        # Serverless will automatically build Docker image and push to ECR
        serverless deploy --stage dev --region ${{ env.AWS_REGION }}

    - name: Get deployment info
      run: |
        echo "Deployment completed successfully!"
        serverless info --stage dev --region ${{ env.AWS_REGION }}
